Questão 1) Leia as sentenças abaixo e assinale todas as VERDADEIRAS:
( ) Métodos estáticos podem ser abstratos.
( ) Construtores podem ser abstratos.
(x) Classes abstratas podem ter construtores.
( ) Métodos abstratos podem ser privativos.
(x) Uma classe abstrata podem estender uma normal.
(x) Posso ter uma classe abstrata sem nenhum método abstrato.



Questão 2) Sobre as classes abstratas puras, assinale a alternativa correta:
a) Uma classe abstrata é pura quando possui métodos abstratos; Não possui métodos
concretos; e Não possui atributos (não-static).
b) Uma classe abstrata é pura quando possui métodos abstratos e públicos; Pode possuir
métodos concretos e abstratos; e Não possui atributos (não-static).
c) Uma interface é uma classe abstrata pura; Pode possuir métodos concretos e abstratos.
d) Uma interface é uma classe abstrata pura; Pode possuir métodos e atributos concretos e
abstratos.
e) Uma classe abstrata é pura quando possui métodos abstratos e públicos; É denominada
Interface; Pode possuir métodos concretos e abstratos.

Resposta Correta: LETRA A


Questão 3) Suponha que você queira estabelecer uma relação de herança entre as classes A e B,
onde A é superclasse de B. Deste modo, qual das alternativas abaixo É CORRETA?
a) class B extends A {}
b) class B inherits class A {}
c) class B extends class A {}
d) class B + class A {}
e) class A extends class B {}

Resposta Correta: LETRA A


Questão 4) Analise o Diagrama de Classe abaixo e escreva o código do programa em Java.
OBS: É necessário fazer o Main, instanciar os objetos Triângulo e Quadrado e chamar o método
calcularArea() de cada um.


public abstract class PoligonoRegular {
    private int numlado;
    private float tamLado;

    public PoligonoRegular(int numlado, float tamLado) {
        this.numlado = numlado;
        this.tamLado = tamLado;
    }

   public float calculaPerimetro(){
        return numlado*tamLado;
   }
   public abstract float calculaArea();

    public int getNumlado() {
        return numlado;
    }

    public void setNumlado(int numlado) {
        this.numlado = numlado;
    }

    public float getTamLado() {
        return tamLado;
    }

    public void setTamLado(float tamLado) {
        this.tamLado = tamLado;
    }
}

           ------/-----/------

public class Quadrado extends PoligonoRegular {
    public Quadrado(int numLado, float tamLado){
        super(numLado, tamLado);
    }

    public float calculaArea() {
        return getTamLado()*getTamLado();
    }
}

       -------/-------/------
       
public class Triangulo extends PoligonoRegular {
    public Triangulo(int numLado, float tamLado){
        super(numLado, tamLado);
    }

    public float calculaArea() {
        return getTamLado()*getTamLado()/2;
    }
}

      -------/------/--------
public class Main {
    public static void main(String[] args) {
        Triangulo T1 = new Triangulo(3,4);
        Quadrado Q1 = new Quadrado(4,4);

        float areaTriangulo = T1.calculaArea();
        float areaQuadrado = Q1.calculaArea();

        System.out.println("A area do Triangulo é:" + areaTriangulo);
    System.out.println("A area do Quadrado é:" + areaQuadrado);

    }
}


Questão 5) O que será exibido pelo programa abaixo?
a) 1.
b) 2.
c) 0.
d) Nada, pois há um erro de execução.
e) Nada, pois há um erro de compilação

Resposta Correta: LETRA B



Questão 6) Analise o código fonte abaixo, comente as classes e mostre o que irá aparecer na saída
do main(). (3,5 pontos)

Na classe EnvioConvite, ela é a classe Principal que contém o método main, reponsável pela criação de instâncias das classes ConvidarWhatsapp, 
convidarEmail e Convite e imprime as informações na saída

A classe convite representa um convite e possui dois atributos: destinatario e mensagem. Ela também tem um método mostrar que retorna uma string 
com as informações do convite.

A classe convidarWhatsapp estende a classe Convite e adiciona um atributo numeroTelefone para armazenar o número de telefone do destinatário. Além 
disso, ela sobrescreve o método mostrar da classe Convite para incluir informações específicas para o envio por WhatsApp.

A classe convidar e-mail estende a classe Convite e adiciona um atributo enderecoEmail para armazenar o endereço de email do destinatário. Além 
disso, ela sobrescreve o método mostrar da classe Convite para incluir informações específicas para o envio por email.

O que irá resultar do método main é que não ira compilar pois há um erro de execução.


